{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["/* ------------ LIBRARIES ------------ */\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/* ----------------------------------- */\n\nconst section = document.querySelector('section');\nsection.classList.add('section');\nconst homeLink = document.querySelector('a');\nhomeLink.classList.add('to-home-link');\n\nconst input = document.querySelector('#datetime-picker');\ninput.classList.add('date-input');\nconst button = document.querySelector('button[data-start]');\nbutton.classList.add('start-btn');\nconst timer = document.querySelector('.timer');\n\nconst daysValue = timer.querySelector('[data-days]');\nconst hoursValue = timer.querySelector('[data-hours]');\nconst minutesValue = timer.querySelector('[data-minutes]');\nconst secondsValue = timer.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nconst date = new Date();\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() < date.getTime()) {\n      // button.disabled = true;\n      iziToast.show({\n        title: 'Dude!',\n        message: 'Please choose a date in the future',\n        // titleColor: 'rgb(178, 34, 34)',\n        backgroundColor: 'rgb(205,92,92)',\n      });\n    } else {\n      button.disabled = false;\n    }\n  },\n};\nconst fp = flatpickr(input, options);\n\nbutton.addEventListener('click', handleStart);\n\nfunction handleStart(event) {\n  button.disabled = true;\n  // const remainingMs = userSelectedDate - date;\n  // console.log(remainingMs);\n\n  // let remainingTime = convertMs(remainingMs);\n  // console.log(remainingTime);\n\n  // const daysFormatted = addLeadingZero(String(remainingTime.days));\n  // const hoursFormatted = addLeadingZero(String(remainingTime.hours));\n  // const minutesFormatted = addLeadingZero(String(remainingTime.minutes));\n  // const secondsFormatted = addLeadingZero(String(remainingTime.seconds));\n\n  // daysValue.innerHTML = daysFormatted;\n  // hoursValue.innerHTML = hoursFormatted;\n  // minutesValue.innerHTML = minutesFormatted;\n  // secondsValue.innerHTML = secondsFormatted;\n\n  const intervalId = setInterval(() => {\n    const currentDate = new Date();\n    const remainingMs = userSelectedDate - currentDate;\n    if (remainingMs > 0) {\n      let remainingTime = convertMs(remainingMs);\n      console.log(remainingTime);\n\n      const daysFormatted = addLeadingZero(String(remainingTime.days));\n      const hoursFormatted = addLeadingZero(String(remainingTime.hours));\n      const minutesFormatted = addLeadingZero(String(remainingTime.minutes));\n      const secondsFormatted = addLeadingZero(String(remainingTime.seconds));\n\n      daysValue.innerHTML = daysFormatted;\n      hoursValue.innerHTML = hoursFormatted;\n      minutesValue.innerHTML = minutesFormatted;\n      secondsValue.innerHTML = secondsFormatted;\n    } else {\n      clearInterval(intervalId);\n      iziToast.show({\n        title: 'Dude!',\n        message: 'Your time is up',\n        backgroundColor: 'rgb(143,188,143)',\n      });\n    }\n  }, 1000);\n}\n\nconst addLeadingZero = value => {\n  if (value.length === 1) {\n    return value.padStart(2, '0');\n  } else {\n    return value;\n  }\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["section","homeLink","input","button","timer","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","date","options","selectedDates","iziToast","flatpickr","handleStart","event","intervalId","remainingMs","remainingTime","convertMs","daysFormatted","addLeadingZero","hoursFormatted","minutesFormatted","secondsFormatted","value","ms","days","hours","minutes","seconds"],"mappings":"+IAUA,MAAMA,EAAU,SAAS,cAAc,SAAS,EAChDA,EAAQ,UAAU,IAAI,SAAS,EAC/B,MAAMC,EAAW,SAAS,cAAc,GAAG,EAC3CA,EAAS,UAAU,IAAI,cAAc,EAErC,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACvDA,EAAM,UAAU,IAAI,YAAY,EAChC,MAAMC,EAAS,SAAS,cAAc,oBAAoB,EAC1DA,EAAO,UAAU,IAAI,WAAW,EAChC,MAAMC,EAAQ,SAAS,cAAc,QAAQ,EAEvCC,EAAYD,EAAM,cAAc,aAAa,EAC7CE,EAAaF,EAAM,cAAc,cAAc,EAC/CG,EAAeH,EAAM,cAAc,gBAAgB,EACnDI,EAAeJ,EAAM,cAAc,gBAAgB,EAEzD,IAAIK,EAAmB,KACvB,MAAMC,EAAO,IAAI,KACjBP,EAAO,SAAW,GAElB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAC9BH,EAAiB,QAAO,EAAKC,EAAK,QAAO,EAE3CG,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCAET,gBAAiB,gBACzB,CAAO,EAEDV,EAAO,SAAW,EAErB,CACH,EACWW,EAAUZ,EAAOS,CAAO,EAEnCR,EAAO,iBAAiB,QAASY,CAAW,EAE5C,SAASA,EAAYC,EAAO,CAC1Bb,EAAO,SAAW,GAiBlB,MAAMc,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAcT,EADA,IAAI,KAExB,GAAIS,EAAc,EAAG,CACnB,IAAIC,EAAgBC,EAAUF,CAAW,EACzC,QAAQ,IAAIC,CAAa,EAEzB,MAAME,EAAgBC,EAAe,OAAOH,EAAc,IAAI,CAAC,EACzDI,EAAiBD,EAAe,OAAOH,EAAc,KAAK,CAAC,EAC3DK,EAAmBF,EAAe,OAAOH,EAAc,OAAO,CAAC,EAC/DM,EAAmBH,EAAe,OAAOH,EAAc,OAAO,CAAC,EAErEd,EAAU,UAAYgB,EACtBf,EAAW,UAAYiB,EACvBhB,EAAa,UAAYiB,EACzBhB,EAAa,UAAYiB,CAC/B,MACM,cAAcR,CAAU,EACxBJ,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,kBACT,gBAAiB,kBACzB,CAAO,CAEJ,EAAE,GAAI,CACT,CAEA,MAAMS,EAAiBI,GACjBA,EAAM,SAAW,EACZA,EAAM,SAAS,EAAG,GAAG,EAErBA,EAIX,SAASN,EAAUO,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}